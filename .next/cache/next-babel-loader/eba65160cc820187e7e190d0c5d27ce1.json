{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lapakanik\\\\Asset\\\\FRONTEND\\\\frontpage\\\\src\\\\parts\\\\Details\\\\RenderPreview.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Youtube from \"react-youtube\";\nimport Accordion, { IconLock, IconPlay, Item } from \"src/components/Accordion\";\nimport Modal from \"src/components/Modal\";\nexport default function RenderPreview(_ref) {\n  var _this = this;\n\n  var previews = _ref.previews;\n  return __jsx(\"div\", {\n    className: \"accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, function (Active, toggle) {\n    return previews === null || previews === void 0 ? void 0 : previews.map(function (item, index) {\n      var _item$lessons;\n\n      return __jsx(Item, {\n        id: item.id,\n        name: item.name,\n        child: item.lessons,\n        active: Active,\n        toggle: toggle,\n        key: \"\".concat(index, \"-\").concat(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }\n      }, (item === null || item === void 0 ? void 0 : (_item$lessons = item.lessons) === null || _item$lessons === void 0 ? void 0 : _item$lessons.length) > 0 && item.lessons.map(function (child, index2) {\n        var _child$name;\n\n        return __jsx(\"div\", {\n          key: \"\".concat(index2, \"-\").concat(child.id),\n          className: \"relative hover:bg-gray-200 flex justify-between items-center pl-8 pr-4 py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        }, __jsx(\"span\", {\n          className: \"text-gray-600\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 23\n          }\n        }, (_child$name = child === null || child === void 0 ? void 0 : child.name) !== null && _child$name !== void 0 ? _child$name : \"Course name\"), index2 === 0 && __jsx(Modal, {\n          content: function content(toggleModal) {\n            return __jsx(Youtube, {\n              className: \"w-full\",\n              videoId: child === null || child === void 0 ? void 0 : child.video,\n              id: child === null || child === void 0 ? void 0 : child.video,\n              opts: {\n                playerVars: {\n                  autoplay: 1,\n                  controls: 1,\n                  showinfo: 1\n                }\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, function (toggleModal) {\n          return __jsx(\"span\", {\n            className: \"link-wrapped\",\n            onClick: toggleModal,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }\n          });\n        }), index2 === 0 && __jsx(IconPlay, {\n          className: \"fill-teal-500\",\n          width: 20,\n          height: 20,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }), index2 !== 0 && __jsx(IconLock, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }\n        }));\n      }));\n    });\n  }));\n}\n_c = RenderPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPreview\");","map":{"version":3,"sources":["D:/Lapakanik/Asset/FRONTEND/frontpage/src/parts/Details/RenderPreview.js"],"names":["React","Youtube","Accordion","IconLock","IconPlay","Item","Modal","RenderPreview","previews","Active","toggle","map","item","index","id","name","lessons","length","child","index2","toggleModal","video","playerVars","autoplay","controls","showinfo"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Youtube from \"react-youtube\";\n\nimport Accordion, { IconLock, IconPlay, Item } from \"src/components/Accordion\";\nimport Modal from \"src/components/Modal\";\n\nexport default function RenderPreview({ previews }) {\n  return (\n    <div className=\"accordion\">\n      <Accordion>\n        {(Active, toggle) => {\n          return previews?.map((item, index) => {\n            return (\n              <Item\n                id={item.id}\n                name={item.name}\n                child={item.lessons}\n                active={Active}\n                toggle={toggle}\n                key={`${index}-${item.id}`}\n              >\n                {item?.lessons?.length > 0 &&\n                  item.lessons.map((child, index2) => (\n                    <div\n                      key={`${index2}-${child.id}`}\n                      className=\"relative hover:bg-gray-200 flex justify-between items-center pl-8 pr-4 py-2\"\n                    >\n                      <span className=\"text-gray-600\">\n                        {child?.name ?? \"Course name\"}\n                      </span>\n                      {index2 === 0 && (\n                        <Modal\n                          content={(toggleModal) => (\n                            <Youtube\n                              className=\"w-full\"\n                              videoId={child?.video}\n                              id={child?.video}\n                              opts={{\n                                playerVars: {\n                                  autoplay: 1,\n                                  controls: 1,\n                                  showinfo: 1,\n                                },\n                              }}\n                            ></Youtube>\n                          )}\n                        >\n                          {(toggleModal) => (\n                            <span\n                              className=\"link-wrapped\"\n                              onClick={toggleModal}\n                            ></span>\n                          )}\n                        </Modal>\n                      )}\n                      {index2 === 0 && (\n                        <IconPlay\n                          className=\"fill-teal-500\"\n                          width={20}\n                          height={20}\n                        ></IconPlay>\n                      )}\n\n                      {index2 !== 0 && <IconLock></IconLock>}\n                    </div>\n                  ))}\n              </Item>\n            );\n          });\n        }}\n      </Accordion>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}