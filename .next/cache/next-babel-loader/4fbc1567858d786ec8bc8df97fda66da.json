{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lapakanik\\\\Asset\\\\FRONTEND\\\\frontpage\\\\src\\\\components\\\\Modal\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from \"react\";\nimport propTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nexport default function Modal(props) {\n  _s();\n\n  var _props$in;\n\n  var _useState = useState(function () {\n    return false;\n  }),\n      Ready = _useState[0],\n      setReady = _useState[1];\n\n  var _useState2 = useState(function () {\n    return false;\n  }),\n      Display = _useState2[0],\n      setDisplay = _useState2[1];\n\n  var _useState3 = useState(function () {\n    return true;\n  }),\n      Allow = _useState3[0],\n      setAllow = _useState3[1];\n\n  var ModalRef = useRef(null);\n  var idModal = \"modal\";\n\n  function toggleAllow() {\n    setAllow(!Allow);\n  }\n\n  function toggle() {\n    if (props.toggleModal) props.toggleModal();else setDisplay(!Display);\n  }\n\n  function handleClickOutside(event) {\n    var _ModalRef$current, _ModalRef$current$con;\n\n    if ((ModalRef === null || ModalRef === void 0 ? void 0 : ModalRef.current) && !(ModalRef === null || ModalRef === void 0 ? void 0 : (_ModalRef$current = ModalRef.current) === null || _ModalRef$current === void 0 ? void 0 : (_ModalRef$current$con = _ModalRef$current.contains) === null || _ModalRef$current$con === void 0 ? void 0 : _ModalRef$current$con.call(_ModalRef$current, event.target)) && Allow) toggle();\n  }\n\n  useEffect(function () {\n    var rootContainer = document.createElement(\"div\");\n    rootContainer.setAttribute(\"id\", idModal);\n    setReady(true);\n    if (!document.getElementById(idModal)) document.body.appendChild(rootContainer);\n  }, []);\n  useEffect(function () {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  useEffect(function () {\n    if (Display || props[\"in\"]) {\n      document.querySelector(\"body\").classList.add(\"modal-open\");\n    }\n\n    return function () {\n      document.querySelector(\"body\").classList.remove(\"modal-open\");\n    };\n  }, [Display, props[\"in\"]]);\n  if (!Ready) return null;\n  return __jsx(React.Fragment, null, props.children(toggle), document && document.getElementById(idModal) && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, createPortal(__jsx(CSSTransition, {\n    \"in\": (_props$in = props[\"in\"]) !== null && _props$in !== void 0 ? _props$in : Display,\n    timeout: 500,\n    onExit: toggleAllow,\n    onExited: toggleAllow,\n    classNames: \"overlay\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"overlay fixed inset-0 h-screen z-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-black opacity-25 inset-0 absolute z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"absolute z-20 flex items-center justify-center inset-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: props.modalStyle,\n    ref: ModalRef,\n    className: \"bg-white shadow-2xl w-full md:w-auto max-h-2xl md:max-w-3xl \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"modal-close\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  })), props.content(toggle))))), document.getElementById(idModal))));\n}\n\n_s(Modal, \"Bw8+aKTV9bzs+grmBuXGeQHMDL8=\");\n\n_c = Modal;\nModal.defaultProps = {};\nModal.propTypes = {\n  \"in\": propTypes.bool,\n  toggleModal: propTypes.func,\n  content: propTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["D:/Lapakanik/Asset/FRONTEND/frontpage/src/components/Modal/index.js"],"names":["React","useState","useEffect","useRef","propTypes","createPortal","CSSTransition","Modal","props","Ready","setReady","Display","setDisplay","Allow","setAllow","ModalRef","idModal","toggleAllow","toggle","toggleModal","handleClickOutside","event","current","contains","target","rootContainer","document","createElement","setAttribute","getElementById","body","appendChild","addEventListener","removeEventListener","querySelector","classList","add","remove","children","modalStyle","content","defaultProps","bool","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport propTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\n\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function Modal(props) {\n  const [Ready, setReady] = useState(() => false);\n  const [Display, setDisplay] = useState(() => false);\n  const [Allow, setAllow] = useState(() => true);\n\n  const ModalRef = useRef(null);\n  const idModal = \"modal\";\n\n  function toggleAllow() {\n    setAllow(!Allow);\n  }\n\n  function toggle() {\n    if (props.toggleModal) props.toggleModal();\n    else setDisplay(!Display);\n  }\n\n  function handleClickOutside(event) {\n    if (\n      ModalRef?.current &&\n      !ModalRef?.current?.contains?.(event.target) &&\n      Allow\n    )\n      toggle();\n  }\n\n  useEffect(() => {\n    const rootContainer = document.createElement(\"div\");\n    rootContainer.setAttribute(\"id\", idModal);\n    setReady(true);\n\n    if (!document.getElementById(idModal))\n      document.body.appendChild(rootContainer);\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  useEffect(() => {\n    if (Display || props.in) {\n      document.querySelector(\"body\").classList.add(\"modal-open\");\n    }\n    return () => {\n      document.querySelector(\"body\").classList.remove(\"modal-open\");\n    };\n  }, [Display, props.in]);\n\n  if (!Ready) return null;\n\n  return (\n    <>\n      {props.children(toggle)}\n      {document && document.getElementById(idModal) && (\n        <div>\n          {createPortal(\n            <CSSTransition\n              in={props.in ?? Display}\n              timeout={500}\n              onExit={toggleAllow}\n              onExited={toggleAllow}\n              classNames=\"overlay\"\n              unmountOnExit\n            >\n              <div className=\"overlay fixed inset-0 h-screen z-50\">\n                <div className=\"bg-black opacity-25 inset-0 absolute z-10\"></div>\n                <div className=\"absolute z-20 flex items-center justify-center inset-0\">\n                  <div\n                    style={props.modalStyle}\n                    ref={ModalRef}\n                    className=\"bg-white shadow-2xl w-full md:w-auto max-h-2xl md:max-w-3xl \"\n                  >\n                    <div className=\"relative\">\n                      <span className=\"modal-close\" onClick={toggle}></span>\n                    </div>\n\n                    {props.content(toggle)}\n                  </div>\n                </div>\n              </div>\n            </CSSTransition>,\n            document.getElementById(idModal)\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nModal.defaultProps = {};\nModal.propTypes = {\n  in: propTypes.bool,\n  toggleModal: propTypes.func,\n  content: propTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}